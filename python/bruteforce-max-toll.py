# Released under Apache 2.0; refer to LICENSE.txt

from customtree import *
from IntegerPartitions import *

# find the maximum toll of ALDR[P, 2k] over all m-type distributions P.

maxmaxtoll = 0
maxmaxA = []
for m in range(2,115):
    k = (m-1).bit_length()
    maxtoll = 0
    maxA = 0
    for A in revlex_partitions(m):
        if len(A) == 1:
            continue
        g = math.gcd(*A)
        A = [a//g for a in A]
        cost = get_tree_entropy(gen_fldr_tree(A, max_depth=k*2))
        entropy = H(A)
        toll = cost - entropy
        if toll > maxtoll:
            maxtoll = toll
            maxA = A.copy()
    print(f"m={m}, k={k}, maxtoll={maxtoll}, maxA={maxA}", flush=True)
    if maxtoll >= 2:
        break
    if maxtoll > maxmaxtoll:
        maxmaxtoll = maxtoll
        maxmaxA = maxA.copy()
print(f"maxmaxtoll={maxmaxtoll}, maxmaxA={maxmaxA}")

# m=2, k=1, maxtoll=0, maxA=0
# m=3, k=2, maxtoll=1.0817041659455104, maxA=[2, 1]
# m=4, k=2, maxtoll=0.6887218755408672, maxA=[3, 1]
# m=5, k=3, maxtoll=1.278071905112638, maxA=[1, 1, 1, 1, 1]
# m=6, k=3, maxtoll=1.5408520829727554, maxA=[3, 1, 1, 1]
# m=7, k=3, maxtoll=1.4083272214176725, maxA=[6, 1]
# m=8, k=3, maxtoll=1.2064355568004037, maxA=[7, 1]
# m=9, k=4, maxtoll=1.4967416652243548, maxA=[2, 2, 1, 1, 1, 1, 1]
# m=10, k=4, maxtoll=1.671035952556319, maxA=[5, 2, 1, 1, 1]
# m=11, k=4, maxtoll=1.6237441197978544, maxA=[5, 5, 1]
# m=12, k=4, maxtoll=1.770426041486378, maxA=[3, 3, 3, 1, 1, 1]
# m=13, k=4, maxtoll=1.7388687861896965, maxA=[10, 3]
# m=14, k=4, maxtoll=1.7041636107088363, maxA=[7, 6, 1]
# m=15, k=4, maxtoll=1.6466406649785785, maxA=[14, 1]
# m=16, k=4, maxtoll=1.537709933382986, maxA=[15, 1]
# m=17, k=5, maxtoll=1.677243041102602, maxA=[8, 8, 1]
# m=18, k=5, maxtoll=1.801567681960786, maxA=[17, 1]
# m=19, k=5, maxtoll=1.8296379794819022, maxA=[18, 1]
# m=20, k=5, maxtoll=1.81951797627816, maxA=[5, 5, 5, 2, 2, 1]
# m=21, k=5, maxtoll=1.723804572352061, maxA=[20, 1]
# m=22, k=5, maxtoll=1.8197771982388482, maxA=[11, 10, 1]
# m=23, k=5, maxtoll=1.7736018846948685, maxA=[11, 11, 1]
# m=24, k=5, maxtoll=1.885213020743189, maxA=[12, 6, 3, 1, 1, 1]
# m=25, k=5, maxtoll=1.7897078109175855, maxA=[12, 6, 3, 3, 1]
# m=26, k=5, maxtoll=1.8280468572386268, maxA=[13, 12, 1]
# m=27, k=5, maxtoll=1.8195099040945202, maxA=[13, 13, 1]
# m=28, k=5, maxtoll=1.8520818053544184, maxA=[14, 7, 3, 3, 1]
# m=29, k=5, maxtoll=1.7993666143467648, maxA=[28, 1]
# m=30, k=5, maxtoll=1.8233203324892895, maxA=[15, 7, 7, 1]
# m=31, k=5, maxtoll=1.7944074918149169, maxA=[30, 1]
# m=32, k=5, maxtoll=1.7368776756872855, maxA=[31, 1]
# m=33, k=6, maxtoll=1.8040907291263952, maxA=[16, 16, 1]
# m=34, k=6, maxtoll=1.8673902745975712, maxA=[33, 1]
# m=35, k=6, maxtoll=1.812823743126792, maxA=[34, 1]
# m=36, k=6, maxtoll=1.8859848263355876, maxA=[18, 9, 2, 2, 1, 1, 1, 1, 1]
# m=37, k=6, maxtoll=1.8915056038333495, maxA=[18, 9, 9, 1]
# m=38, k=6, maxtoll=1.900676981028872, maxA=[37, 1]
# m=39, k=6, maxtoll=1.827963050646886, maxA=[38, 1]
# m=40, k=6, maxtoll=1.90975898813908, maxA=[20, 10, 5, 1, 1, 1, 1, 1]
# m=41, k=6, maxtoll=1.899613616410238, maxA=[20, 5, 5, 5, 5, 1]
# m=42, k=6, maxtoll=1.8717206465098548, maxA=[21, 10, 10, 1]
# m=43, k=6, maxtoll=1.860233780643619, maxA=[42, 1]
# m=44, k=6, maxtoll=1.890125753269622, maxA=[11, 11, 11, 5, 5, 1]
# m=45, k=6, maxtoll=1.8462578196712383, maxA=[44, 1]
# m=46, k=6, maxtoll=1.8709906656675923, maxA=[23, 22, 1]
# m=47, k=6, maxtoll=1.8573199152923223, maxA=[46, 1]
# m=48, k=6, maxtoll=1.9426065103715953, maxA=[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1]
# m=49, k=6, maxtoll=1.8779114007515458, maxA=[12, 12, 6, 6, 6, 3, 3, 1]
# m=50, k=6, maxtoll=1.9084835350884224, maxA=[25, 24, 1]
# m=51, k=6, maxtoll=1.8607670009449013, maxA=[25, 25, 1]
# m=52, k=6, maxtoll=1.9219129749703985, maxA=[13, 13, 13, 6, 3, 3, 1]
# m=53, k=6, maxtoll=1.8777057722039985, maxA=[26, 26, 1]
# m=54, k=6, maxtoll=1.9222741378997792, maxA=[27, 26, 1]
# m=55, k=6, maxtoll=1.8924806940048782, maxA=[54, 1]
# m=56, k=6, maxtoll=1.9260409026772092, maxA=[28, 14, 7, 6, 1]
# m=57, k=6, maxtoll=1.8963027632261737, maxA=[28, 28, 1]
# m=58, k=6, maxtoll=1.9075650805723974, maxA=[29, 28, 1]
# m=59, k=6, maxtoll=1.887840847101078, maxA=[58, 1]
# m=60, k=6, maxtoll=1.9116601662446446, maxA=[30, 15, 14, 1]
# m=61, k=6, maxtoll=1.8832338379561366, maxA=[15, 15, 15, 15, 1]
# m=62, k=6, maxtoll=1.8972037459074587, maxA=[31, 15, 15, 1]
# m=63, k=6, maxtoll=1.8824053343411355, maxA=[31, 31, 1]
# m=64, k=6, maxtoll=1.8526349246952303, maxA=[63, 1]
# m=65, k=7, maxtoll=1.885324494663854, maxA=[16, 16, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
# m=66, k=7, maxtoll=1.9170287268059336, maxA=[65, 1]
# m=67, k=7, maxtoll=1.9194089070555953, maxA=[66, 1]
# m=68, k=7, maxtoll=1.9336951372987856, maxA=[34, 33, 1]
# m=69, k=7, maxtoll=1.9252033698952533, maxA=[17, 17, 17, 17, 1]
# m=70, k=7, maxtoll=1.9064118715633962, maxA=[35, 17, 17, 1]
# m=71, k=7, maxtoll=1.9275006804226884, maxA=[70, 1]
# m=72, k=7, maxtoll=1.9410085182362558, maxA=[36, 9, 9, 9, 4, 1, 1, 1, 1, 1]
# m=73, k=7, maxtoll=1.8955809219945925, maxA=[18, 18, 9, 9, 9, 9, 1]
# m=74, k=7, maxtoll=1.9172204439725524, maxA=[37, 18, 18, 1]
# m=75, k=7, maxtoll=1.9017563366800345, maxA=[37, 37, 1]
# m=76, k=7, maxtoll=1.9350407475261866, maxA=[75, 1]
# m=77, k=7, maxtoll=1.9362646781609583, maxA=[76, 1]
# m=78, k=7, maxtoll=1.9139815253234431, maxA=[39, 19, 19, 1]
# m=79, k=7, maxtoll=1.9093975203821745, maxA=[78, 1]
# m=80, k=7, maxtoll=1.9548794940695404, maxA=[20, 10, 10, 10, 5, 5, 5, 5, 5, 2, 1, 1, 1]
# m=81, k=7, maxtoll=1.9064742859174646, maxA=[20, 20, 20, 10, 10, 1]
# m=82, k=7, maxtoll=1.9372170967728504, maxA=[81, 1]
# m=83, k=7, maxtoll=1.9098296948594555, maxA=[82, 1]
# m=84, k=7, maxtoll=1.930951143088015, maxA=[42, 21, 20, 1]
# m=85, k=7, maxtoll=1.907722752255426, maxA=[84, 1]
# m=86, k=7, maxtoll=1.9325648707379663, maxA=[43, 42, 1]
# m=87, k=7, maxtoll=1.9192384896014747, maxA=[86, 1]
# m=88, k=7, maxtoll=1.9450628766348108, maxA=[44, 22, 11, 10, 1]
# m=89, k=7, maxtoll=1.9111203043154243, maxA=[44, 44, 1]
# m=90, k=7, maxtoll=1.9231289098356195, maxA=[45, 11, 11, 11, 11, 1]
# m=91, k=7, maxtoll=1.9127194111163668, maxA=[90, 1]
# m=92, k=7, maxtoll=1.9354953328337963, maxA=[46, 23, 22, 1]
# m=93, k=7, maxtoll=1.914257317464498, maxA=[23, 23, 23, 23, 1]
# m=94, k=7, maxtoll=1.930127309076829, maxA=[47, 46, 1]
# m=95, k=7, maxtoll=1.9255294928883937, maxA=[94, 1]
# m=96, k=7, maxtoll=1.9713032551857976, maxA=[24, 12, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1]
# m=97, k=7, maxtoll=1.926981807520213, maxA=[24, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1]
# m=98, k=7, maxtoll=1.9300921881575244, maxA=[49, 24, 12, 12, 1]
# m=99, k=7, maxtoll=1.9283328919707683, maxA=[98, 1]
# m=100, k=7, maxtoll=1.9492429036496421, maxA=[25, 25, 25, 12, 6, 6, 1]
# m=101, k=7, maxtoll=1.922308641582061, maxA=[25, 25, 25, 25, 1]
# m=102, k=7, maxtoll=1.9303835004724508, maxA=[51, 25, 25, 1]
# m=103, k=7, maxtoll=1.925540395824275, maxA=[51, 51, 1]
# m=104, k=7, maxtoll=1.9604037167217476, maxA=[52, 26, 13, 3, 3, 3, 3, 1]
# m=105, k=7, maxtoll=1.9223804888736264, maxA=[26, 26, 26, 26, 1]
# m=106, k=7, maxtoll=1.942283417834418, maxA=[53, 52, 1]
# m=107, k=7, maxtoll=1.9279737277950513, maxA=[106, 1]
# m=108, k=7, maxtoll=1.9543935483873849, maxA=[27, 27, 27, 13, 13, 1]
# m=109, k=7, maxtoll=1.9286461055012505, maxA=[54, 54, 1]
# m=110, k=7, maxtoll=1.952137152899245, maxA=[55, 54, 1]
# m=111, k=7, maxtoll=1.9341853818998018, maxA=[110, 1]
# m=112, k=7, maxtoll=1.963020451338605, maxA=[56, 28, 7, 7, 7, 3, 3, 1]
# m=113, k=7, maxtoll=1.9387332907156538, maxA=[14, 14, 14, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 1]
# m=114, k=7, maxtoll=1.947086965426358, maxA=[57, 14, 14, 14, 7, 7, 1]
